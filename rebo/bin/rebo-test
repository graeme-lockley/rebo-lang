#!env rebo

let CLI = import("../lib/cli.rebo")
let Std = import("../lib/std.rebo")
let Str = import("../lib/str.rebo")
let Test = import("../lib/test.rebo")

let args = CLI.parse()

let test = Test.harness("suite")

let normaliseName(name) {
  if name[0] == '/' -> name
  | {
      let dir = cwd()

      if Str.endsWith?(dir, "/") -> dir + name
      | dir + "/" + name
    }
}

let args' = (if args.verb == () -> [] | [args.verb]) + args.args

let silent = if args.opts.silent -> true | false
let showTotals = if args.opts["no-totals"] -> false | true

args'
  |> Std.each(fn(name) {
      let module = normaliseName(name) |> import()

      if module.run == () -> {
        println("Error: File ", name, " did not load correctly or does not have a run function: ", module)
        exit(1)
      } | {
        let newSuite = test.suite(name)
          
        newSuite |> module.run()
        newSuite.report(false, silent)
      }
    })

let stats = test.report(showTotals, true)

exit(stats.failed)
