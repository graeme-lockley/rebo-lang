# `ansiColours` are the ANSI/VT100 terminal codes that allow colours to be 
# displayed on the terminal.  The codes are used in the `print` and `println` 
# function to change the colour of the text.
let ansi = {
  control: {
    reset: "\x27;[0m"
  },
  foreground: {
    black: "\x27;[30m",
    red: "\x27;[31m",
    green: "\x27;[32m",
    yellow: "\x27;[33m",
    blue: "\x27;[34m",
    magenta: "\x27;[35m",
    cyan: "\x27;[36m",
    white: "\x27;[37m",
    lightRed: "\x27;[91m",
    lightGreen: "\x27;[92m",
    lightYellow: "\x27;[93m",
    lightBlue: "\x27;[94m",
    lightMagenta: "\x27;[95m",
    lightCyan: "\x27;[96m",
    lightWhite: "\x27;[97m",
    lightGray: "\x27;[37m",
    darkGray: "\x27;[90m"
  }
}


# `each` calls the given iterator function `f` for each element of the iterable
# `xs`. The iterator function receives arguments (`element`, `index`).
let each(xs, f) {
  let lp = 0

  while lp < len(xs) -> {
    f(xs[lp], lp)

    lp := lp + 1
  }
}

# `filter` produces a sequence containing only the elements of `xs` that return
# `true` when passed to the filter predicate `f`. `f` receives arguments 
# (`element`, `index`).
let filter(xs, f) {
  let result = []
  let lp = 0

  while lp < len(xs) -> {
    let item = xs[lp]

    if f(item, lp) -> {
      result <! item
    }
    
    lp := lp + 1
  }

  result
}
