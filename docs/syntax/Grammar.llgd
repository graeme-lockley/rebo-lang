uses "./Scanner.llld";

Module
    : {Expression {";"}}
    ;

Expression
    : "let" Pattern "=" Expression
    | "let" Identifier FunctionTail
    | "if" ["|"] Expression "->" Expression {"|" Expression "->" Expression}
    | Or [":=" Expression]
    ;

Or
    : And {"||" And}
    ;

And
    : Equality {"&&" Equality}
    ;

Equality
    : Relational [("==" | "!=" | "<" | "<=" | ">" | ">=") Relational]
    ;

Additive
    : Multiplicative {["+" | "-"] Multiplicative}
    ;

Multiplicative
    : Qualifier {["*" | "/" | "%"] Qualifier}
    ;

Qualifier
    : Factor { FactorSuffix }
    ;

FactorSuffix
    : "(" [Expression {"," Expression}] ")"
    | "." Identifier
    ;

Factor
    : "(" [Expression] ")"
    | "{" [RecordItem {"," RecordItem}]"}"
    | "{" Expression {";" Expression} "}"
    | Identifier
    | "false"
    | "true"
    | LiteralChar
    | LiteralFloat
    | LiteralInt
    | LiteralString
    | "[" [Expression {"," Expression}] "]"
    | "fn" FunctionTail
    | "match" Expression MatchCase {"|" MatchCase}
    ;

MatchCase
    : "|" Pattern "->" Expression
    ;

Pattern
    : Identifier
    | LiteralChar
    | LiteralFloat
    | LiteralInt
    | LiteralString
    | "[" [Pattern {"," Pattern}] "]"
    | "{" [MapPattern {"," MapPattern}] "}"
    | "true" 
    | "false"
    ;

MapPattern
    : Identifier [":" Pattern]
    ;

FunctionTail
    : Parameters "=" Expression
    ;

RecordItem
    : [LiteralString | Identifier] ":" Expression
    ;

Parameters
    : "(" [Parameter {"," Parameter}] ")"
    ;

Parameter
    : Identifier ["=" Expression]
    ;
