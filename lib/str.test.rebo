let Str = import("str")

let run(suite) {
  runDropEnd(suite.suite("dropEnd"))
  runDropStart(suite.suite("dropStart"))
  runEndsWith?(suite.suite("endsWith?"))
  runStartsWith?(suite.suite("startsWith?"))
  runReplace(suite.suite("replace"))
  runTrim(suite.suite("trim"))
}

let runDropEnd(suite) {
  let _dropEnd(s, n, expected) =
    suite.eq("\"" + s + "\" " + str(n), Str.dropEnd(s, n), expected)

  _dropEnd("", 0, "")
  _dropEnd("hello", 0, "hello")
  _dropEnd("hello", 2, "hel")
  _dropEnd("hello", 10, "")
}

let runDropStart(suite) {
  let _dropStart(s, n, expected) =
    suite.eq("\"" + s + "\" " + str(n), Str.dropStart(s, n), expected)

  _dropStart("", 0, "")
  _dropStart("hello", 0, "hello")
  _dropStart("hello", 2, "llo")
  _dropStart("hello", 10, "")
}

let runEndsWith?(suite) {
  let _endsWith?(s, prefix, expected) =
    suite.eq("\"" + s + "\" \"" + prefix + "\"", Str.endsWith?(s, prefix), expected)

  _endsWith?("", "", true)
  _endsWith?("hello", "", true)
  _endsWith?("hello", "lo", true)
  _endsWith?("hello", "lllo", false)
  _endsWith?("hello", "shello", false)
}

let runStartsWith?(suite) {
  let _startsWith?(s, prefix, expected) =
    suite.eq("\"" + s + "\" \"" + prefix + "\"", Str.startsWith?(s, prefix), expected)

  _startsWith?("", "", true)
  _startsWith?("hello", "", true)
  _startsWith?("hello", "he", true)
  _startsWith?("hello", "help", false)
  _startsWith?("hello", "hellos", false)
}

let runReplace(suite) {
  let _replace(s, m, n, expected) =
    suite.eq("\"" + s + "\" \"" + m + "\" \"" + n + "\"", Str.replace(s, m, n), expected)

  _replace("", "xx", "yy", "")
  _replace("1xx2xx3", "xx", "yy", "1yy2yy3")
  _replace("1xx2xx3", "xx", "", "123")
}

let runTrim(suite) {
  let _trim(s, expected) =
    suite.eq("\"" + s + "\"", Str.trim(s), expected)

  _trim("", "")
  _trim("hello world", "hello world")
  _trim("  hello world", "hello world")
  _trim("  hello world  ", "hello world")
  _trim("hello world  ", "hello world")
}
