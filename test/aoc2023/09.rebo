#!env rebo

let FS = import("fs")
let Path = import("path")
let Std = import("std")
let Str = import("str")

let parseContent(name) =
   Path.dir(__FILE) + name 
      |> FS.lines() 
      |> Std.map(fn (line) line |> Std.split() |> Std.map(int))

let extrapolateRight(ns) =
   if Std.all(ns, fn (v) v == 0) -> 0
    | {
         let ns' = []

         let i = 1
         while i < len(ns) -> {
            ns' <! ns[i] - ns[i - 1]
            i := i + 1
         }

         ns[len(ns) - 1] + extrapolateRight(ns')
      }

let extrapolateLeft(ns) =
   if Std.all(ns, fn (v) v == 0) -> 0
    | {
         let ns' = []

         let i = 1
         while i < len(ns) -> {
            ns' <! ns[i] - ns[i - 1]
            i := i + 1
         }

         ns[0] - extrapolateLeft(ns')
      }

let calculate1(name) =
   parseContent(name) |> Std.map(extrapolateRight) |> Std.sum()

let calculate2(name) =
   parseContent(name) |> Std.map(extrapolateLeft) |> Std.sum()
